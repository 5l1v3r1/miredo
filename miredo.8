.\" ***********************************************************************
.\" *  Copyright (C) 2004 Remi Denis-Courmont.                            *
.\" *  This program is free software; you can redistribute and/or modify  *
.\" *  it under the terms of the GNU General Public License as published  *
.\" *  by the Free Software Foundation; version 2 of the license.         *
.\" *                                                                     *
.\" *  This program is distributed in the hope that it will be useful,    *
.\" *  but WITHOUT ANY WARRANTY; without even the implied warranty of     *
.\" *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               *
.\" *  See the GNU General Public License for more details.               *
.\" *                                                                     *
.\" *  You should have received a copy of the GNU General Public License  *
.\" *  along with this program; if not, you can get it from:              *
.\" *  http://www.gnu.org/copyleft/gpl.html                               *
.\" ***********************************************************************
.TH "MIREDO" "8" "$Date$" "miredo" "System Manager's Manual"
.SH NAME
miredo \- Teredo IPv6 tunneling for Unix
.SH SYNOPSIS
.BR "miredo" " [" "-b bind_ip" "] [" "-C" "] [" "-i ifname" "] ["
.BR "-p bind_port" "] [" "-P prefix" "] [" "-t rootdir" "] ["
.BR "-u user" "] [" "-s server_ip" "] [" "server name" "]"

.SH DESCRIPTON
.B Miredo
is an Unix daemon program which implements the "Teredo:
Tunneling IPv6 over UDP through NATs" Internet draft specification.
It can provide both server and relay functionnality.

It can be used to provide IPv6 connectivity to users behind NAT which
do not support IPv6, and not even proto-41 forwarding. For this to
work, users need to have a Teredo client running on their system.

A Teredo relay is an IPv6 router which forwards IPv6 packets between
the IPv6 Internet and Teredo clients through UDP/IPv4.

A Teredo client is an IPv6-enabled host which is located behind an
IPv4-only Network Address Translator (a.k.a. NAT), and encapsulates its
IPv6 traffic inside UDP over IPv4 packets.

A Teredo server is a special Teredo relay which is required for Teredo
clients to setup their IPv6 connectivity through Teredo. A Teredo
server must have to global static subsequent IPv4 addresses. It
receives packets from Teredo clients and Teredo relays on UDP port
3544.

This version of the program is designed according to
.IR "draft-huitema-v6ops-teredo-02.txt" ", although it might not be"
entirely conformant to that version of the Teredo specification.

.SH OPTIONS

.TP
.BR "\-h" " or " "\-\-help"
Display some help and exit.

.TP
.BR "\-b ip_address" " or " "\-\-bind ip_address"
Bind the Teredo relay or Teredo client to a specific IPv4 address.
By default, it is not bound to any particular IPv4 address.

Only use this option if you have trouble with the default value, such
as if you have a multi-homed host with equal-cost IPv4 routing, or if
you have specific firewalling constraints.

.TP
.BR "\-C" " or " "\-\-cone"
.RI "Assume that we are behind a " "cone" " NAT device, or no NAT at"
all (ie. that we have a public IPv4 address). This is an optimization
to emit fewer Teredo packets.
That option must not be used when Miredo serves as a Teredo client.

.TP
.BR "\-i ifname" ", " "\-\-iface ifname"
Specify the name of the Teredo tunneling interface which Miredo will
create ("teredo" by default). On some systems, it is not possible to
redefine the tunnel name.

.TP
.BR "\-p port" " or " "\-\-port port"
Define the UDP (over IPv4) port number to be used by the relay or
client (automatic by default).

.TP
.BR "\-P prefix" " or " "\-\-prefix prefix"
Override the Teredo prefix (3ffe:831f:: at the moment).
.BR "Do not use that feature" " if you don't know what you are doing, "
as it is more than likely to break your IPv6 connectivity.
That option must not be used when Miredo serves as a Teredo client.

.TP
.BR "\-s server_ip" " or " "\-\-server server_ip"
.RI "Turn on " "Teredo server mode" "."
With this option, Miredo will behave as a Teredo server on IPv4, with
.RB "primary IPv4 address " "server_ip" " and secondary IPv4 address"
.RB "server_ip + 1" "."
That option must not be used when Miredo serves as a Teredo client.

.TP
.BR "\-t rootdir" " or " "\-\-chroot rootdir"
.RI "Run the program in a " "chroot jail" ", for enhanced security."
.RB "If " "rootdir" " is not specified, the home of the " "setuid user"
.RB "will be used instead. See option " "-u" "."

.TP
.BR "\-u username" " or " "\-\-user username"
Override the user that the program will run as. By default, it runs as
.BR "miredo" "."

.TP
.BR "\-V" " or " "\-\-version"
Display program version and license and exit.

.TP
.BR "\-v" " or " "\-\-verbose"
Print program configuration at startup.

.TP
.BR "server name"
Server name should be valid a IPv4 host name or IPv4 address. Miredo
will try to qualify as a Teredo client with this Teredo server.
This enable Miredo to serve as a Teredo client.
.RB "It conflicts with options " "-C" "," "-P" " and " "-s" "."

.\".SH DIAGNOSTICS
.SH BUGS
Miredo should chroot() for increased security.

.RB "Miredo does not support " "secure qualification" "."
I don't know any client or server implementation that supports it
either, so it is not a real problem at the moment.

.RB "The Internet draft specification for " "Teredo" " has not yet"
been validated. As such it is subject to change and miredo might not
work correctly with other implementations.

.RB "Routing on " "FreeBSD" " does not work automatically yet."
You have to add a route to the Teredo prefix if you run a Teredo relay.
This can typically be done this way:

route add -inet6 -net 3ffe:831f::
-prefixlen 32 fe80::8000:5445:5245:444f%tun0

.RI "Where " "tun0" " is the Teredo tunneling interface name,"
.IR "3ffe:831f::" " is the Teredo IPv6 prefix and "
.IR "fe80::8000:5445:5245:444f" " is the link-local tunnel"
interface's address.

.RB "Routing and IPv6 addressing on " "Darwin" ", " "NetBSD" " and "
.BR "OpenBSD" " is not implemented. Miredo is untested on these"
platforms.

.SH SECURITY
.B Miredo
requires
.I root
privileges to create its IPv6 tunneling network interface, and to set
it up properly. Once its initialization is complete, it will drop
.RB "privileges, setuid (see option " "-u" "), setgid and possibly"
.RB "chroot (see option " "-t" ") so as to decrease your system"
to potential security issues.
If Miredo runs as a Teredo client, it needs root privileges when
running, so as to change the tunneling network interface settings
automatically. To prevent possible root compromises, Miredo implements
.IR "priveleges separation" ". The process that handles input from"
the outside has is not privileged.

Miredo is still beta quality code. As such, it should not be deployed
in production or security-sensitive environment. It is supposedly easy
to deny service by flooding the relay with vaguely carefully crafted
IPv6 packets.

Teredo connectivity throughout the IPv6 Internet seems pretty poor and
unstable at the time of writing these lines. That will hopefully
improve as time goes.

While that is not specific to nor dependant on Miredo, it should be
noted that Teredo connectivity allows anyone behind a NAT to obtain
global public IPv6 connectivity, even if that breaks some corporate
policy. If that is an issue, outgoing UDP packets to port 3544 should
be blocked at the perimeter firewall.

.SH SIGNALS
.BR "SIGHUP" " Force a reload of the daemon."

.BR "SIGINT" ", " "SIGTERM" " Shutdown the daemon."

.BR "SIGUSR1" ", " "SIGUSR2" " Do nothing, might be used in future "
versions.

.SH FILES
.TP
.I /var/run/miredo/miredo.pid
The default process-id file.

.SH "SEE ALSO"
ng_teredo(4), ipv6(7), route(8), ip(8)

.SH AUTHOR
Remi Denis-Courmont <rdenis at simphalempin.com>

$Id$

http://www.simphalempin.com/dev/miredo/

