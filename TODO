ToDo list:
===========
$Id$

This task list is only indicative. It is not exhaustive nor
authoritative.

(!) before next release (0.6.0)
(*) before stable release (1.0.0)
( ) unscheduled
(H) help needed - cannot be done unless someone volunteers
(F) in the distant future - unless someone volunteers
(?) not sure if it should be done

Important features:
--------------------
(!) recover properly from software suspend, SIGSTOP et al,
( ) fixed TODOs and FIXMEs in source code,
( ) local Teredo discovery,
(*) interval determination procedure,
(*) Metric support on BSD

Not so important features:
---------------------------
( ) relay IPv6 access control lists:
    can be done with the OS firewall
( ) support for reading kernel's gatewayed route through the tunnel
    (TUNSLMODE on NetBSD, but NetBSD has no userland IPv6 tunnel)
(*) some statistics,
(H) other localizations,
( ) support for UPnP IGD to open an UDP port on supporting NATs,
( ) support for detecting networking changes with either /proc
    or Netlink
(?) "automatic sunset" / "exit strategy",

Security:
----------
(?) full secure qualification support with user ID,
( ) relay/server IPv4 *modifiable* access control lists
    (currently hard-coded to reject private IPv4 space),
( ) automatic/dynamic relay access control list
    (stateful firewall-like)

Conformance:
-------------
(*) fix bubbles & pings retransmit and timing

Performance/scalibility:
-------------------------
(!) faster peer lists lookups/updates,
( ) distinguish (Teredo) peers from (IPv6) nodes (1-n),
(!) peers list garbage collection,
( ) multi-threading in relay/client

Portability:
-------------
(H) big-endianess/byte-alignment compatibility tests,
(H) Darwin/Solaris compilation,

Compatibility:
---------------
(H) investigate Linux kernel panic/freeze,

Documentation & support:
-------------------------
( ) custom INSTALL file,
( ) RPM packaging,
    Debian packaging : see ITP http://bugs.debian.org/338128

Re-usability:
--------------
(F) libteredo API stabilization,
(?) thread-safety in libteredo,
(F) libteredo C bindings,
(*) external control program for scripting,
(*) don't use a callback to receive packets
