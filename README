Miredo : Teredo for Linux
==========================
$Id: README,v 1.8 2004/08/24 09:49:39 rdenisc Exp $
Copyright (C) 2004 Remi Denis-Courmont.

  Welcome to Miredo's introduction manual!

Where to go?
-------------
  If you've used olders versions of this program, you should read NEWS
for a summary of the most recent updates and changes.

  For detailled usage instructions, you should refer to the Unix manual
page miredo(8) which should be provided with your copy of the program.
In fact, it was not written yet, so you're out of luck.

  See INSTALL for instructions on how to build the package and install
the program from sources.

  This package is distributed under the terms of the General Public
License (GPL) version 2 written by the Free Software Foundation, Inc.
for full licensing details, please read COPYING.

  This software is at a very early development stage. Do NOT use it in
production/critical environment.
  Contributions, feedback and bug reports are most welcome.


What is Miredo?
----------------

  Miredo is an Unix daemon program which implements the "Teredo:
Tunneling IPv6 over UDP through NATs" Internet draft specification.
At the moment, Miredo runs fine on GNU/Linux 2.4.x/2.6.x and not so
fine on FreeBSD 4.x/5.x. It can provide both server and relay
functionnality.

  It can be used to provide IPv6 connectivity to users behind NAT which
do not support IPv6, and not even proto-41 forwarding. For this to
work, users need to have a Teredo client running on their system.
Microsoft provides a Teredo client for Windows XP SP1 in its
"Advanced Networking pack". 

  For more informations on the Teredo technology, please refer to the
Microsoft IPv6 : Teredo overview.


Setting up Miredo
------------------

1) System user:

  Unless you ran the configure script with command line option
'--disable-miredo-user', Miredo will try to SetUID as "miredo", so you
should create a miredo system user if it doesn't exists.


2) Chroot jail:

  Unless you started miredo with command line option '-t /', or used
the already mentioned configure option '--disable-miredo-user', miredo
will try to chroot itself.
  Indeed, to mitigate risks and reduce your system's exposure, it is
recommended to run miredo inside a chroot jail. By the way, miredo will
try to chroot to its user's home by default.

  For the chroot jail to work properly, you should put these device
files (assuming the home directory is /var/run/miredo):

/var/run/miredo/dev/null
/var/run/miredo/dev/net/tun		(Linux only)
/var/run/miredo/dev/tun0, ...tun15	(FreeBSD only)

  root requires read/write access to these files. The miredo
unprivileged user doesn't.

  Additionnaly, you must tell your syslog daemon to listen to
/var/run/miredo/dev/log. That is usually done by adding that option to
your syslogd upon start: '-a /var/run/miredo/dev/log'. If you don't do
so, you won't get any logging information from Miredo (nor if it hasn't
read-write access to dev/log, but it should no problem).


Usage
------
  Miredo must be started by root. Miredo will always detach and run in the
background. Read your system logs to see what happens.


  If you have two subsequent static IPv4 addresses on your system, you
may be able to run a Teredo server. To start the program as a Teredo
server, type the following command:

# src/miredo -s 9.0.0.2

where it is assumed that 9.0.0.2 will be your server's primary IPv4
address, and 9.0.0.3 will be your server's secondary IPv4 address.


  Otherwise, it is possible to run a Teredo relay. To do so, you only
need to start miredo without parameters:

# src/miredo

  That will created a virtual "teredo" networking interface which will
accept IPv6 traffic toward Teredo clients. Note that you must NOT be
behind a "symmetric NAT" for this to work properly.


-- 
Remi Denis-Courmont <rdenis (at) simphalempin (dot) com>
http://www.simphalempin.com/dev/miredo/

